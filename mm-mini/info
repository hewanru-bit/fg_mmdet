cuda编译： python setup.py develop


../configs/retinanet/retinanet_r50_fpn_coco.py
../configs/retinanet/retinanet_r50_fpn_voc.py
../configs/fcos/fcos_center-normbbox-centeronreg-giou_r50_caffe_fpn_gn-head_4x4_1x_coco.py
../configs/atss/atss_r50_fpn_1x_coco.py
../configs/ghm/retinanet_ghm_r50_fpn_1x_coco.py
../configs/gfl/gfl_r50_fpn_1x_coco.py
../configs/pisa/pisa_retinanet_r50_fpn_1x_coco.py
../configs/paa/paa_r50_fpn_1x_coco.py
../configs/faster_rcnn/faster_rcnn_r50_fpn_1x_coco.py
../configs/cascade_rcnn/cascade_rcnn_r50_fpn_1x_coco.py
../configs/dynamic_rcnn/dynamic_rcnn_r50_fpn_1x.py
../configs/libra_rcnn/libra_faster_rcnn_r50_fpn_1x_coco.py
../configs/ssd/ssd300_coco.py
../configs/vfnet/vfnet_r50_fpn_1x_coco.py
../configs/guided_anchoring/ga_retinanet_r50_fpn_1x_coco.py
../configs/sabl/sabl_retinanet_r50_fpn_1x_coco.py
../configs/reppoints/reppoints_moment_r50_fpn_1x_coco.py
../configs/reppoints/bbox_r50_grid_center_fpn_gn-neck+head_1x_coco.py
../configs/reppointv2/reppoints_v2_r50_fpn_1x_coco.py
../configs/cornernet/cornernet_hourglass104_mstest_32x3_210e_coco.py



demo: demo.jpg ../configs/retinanet/retinanet_r50_fpn_coco.py ../tools/work_dirs/retinanet_r50_fpn_coco/latest.pth
demo: bus.jpg ../configs/yolo/rr_yolov5_416_coco.py ../yolov5s.pth

../configs/yolo/yolov3_d53_320_273e_coco.py  /home/pi/Downloads/yolov3_d53_320_273e_coco-421362b6.pth --eval bbox
../configs/faster_rcnn/faster_rcnn_r50_fpn_1x_coco.py  /home/pi/faster_rcnn_r50_fpn_2x_coco_bbox_mAP-0.384_20200504_210434-a5d8aa15.pth --eval bbox


test:

评估：
../configs/retinanet/retinanet_r50_fpn_coco.py ../tools/work_dirs/retinanet_r50_fpn_coco/latest.pth --eval bbox
../configs/yolo/rr_yolov3_d53_416_coco.py  ../yolov3.pth  --show
../configs/yolo/rr_tiny_yolov3_416_coco.py  ../tiny_yolov3.pth  --show  # 416x416
../configs/yolo/rr_yolov4_cspd53_416_coco.py  ../yolov4.pth  --show  # 416x416
../configs/yolo/rr_tiny_yolov4_416_coco.py  ../tiny_yolov4.pth  --show  # 416x416
../configs/yolo/rr_yolov5_416_coco.py  ../yolov5s_mm.pth  --show  # 416x416
../configs/fcos/fcos_center-normbbox-centeronreg-giou_r50_caffe_fpn_gn-head_4x4_1x_coco.py  /home/pi/fcos_center-normbbox-centeronreg-giou_r50_caffe_fpn_gn-head_4x4_1x_coco_20200603-67b3859f.pth  --show  # 416x416


显示：
../configs/retinanet/retinanet_r50_fpn_coco.py ../tools/work_dirs/retinanet_r50_fpn_coco/latest.pth --show


当前同步更新日期:
    mmcv: Skip opencv requirement if it's already installed in the env (i.e. via conda) (#616) David de la Iglesia Castro* 2020/10/17 下午5:58
    mmdetection: Merge pull request #4006 from v-qjqs/doc AemikaChow* 2020/10/28 下午7:25


../configs/yolo/yolov3_d53_320_273e_coco.py  /home/hha/Downloads/yolov3_d53_320_273e_coco-421362b6.pth


首先需要注意coco2014和coco2017，虽然图片是一样的，但是训练、验证和测试集划分原则的是不一样的。
理论上不能用coco2014数据训练，然后在coco2017验证集或者测试集上面测试，因为有些数据是交叉的


还有一个细节需要注意：coco数据集有两种划分原则，coco2014和coco2017，数据还是这些，但是划分方式变了
具体见：https://blog.csdn.net/sinat_34569355/article/details/104548480


MSCOCO2014数据集：
训练集： 82783张，13.5GB， 验证集：40504张，6.6GB，共计123287张

MSCOCO2017数据集：
训练集：118287张，19.3GB，验证集： 5000张，1814.7M，共计123287张


coco2014:

The 2014 release contains 82,783 training, 40,504 validation, and 40,775 testing images
train2014 + val2014=123287,然后从val2014里面随机分出5000张验证集叫做minival2014(社区自己随机分的，没有对比性)

在2017年开始，将数据重新进行了划分，主要是从val2014里面随机挑选了5000张数据变成val2017，其余数据合并到train2017

测试集图片应该一直没有咋变化


train2017 == trainval35k

          == train2014 + val2014 - minival2014

          == train2014 + val2014 - val2017


因为虽然都是5000张，但是minival2014不等于val2017，所以我们下载darknet权重(其在train2014 + val2014 - minival2014上面训练的)，但是在
val2017上面测试，发现mAP比论文高了很多的原因。因为val2017数据可能出现在coco2014训练数据集中。



关于这coco2014和2017，在https://cocodataset.org/#download里面有说明


在yolov3论文中，训练数据是coco2014，也就是train2014 + val2014，指标计算是在test_dev上面得到json，并提交给coco服务器得到的。
并不是在minival2014上面测试的



u版本yolov3 https://github.com/ultralytics/yolov3
贴的指标是不公平的。因为对于原版本yolov3结果来说，其是在test_dev上面测试的。但是
YOLOv3-SPP-ultralytics是在minival2014上面测试的，是不公平的。



首先从这个https://github.com/ultralytics/yolov5

1. val2017和test_dev2017虽然数量差别很大，但是mAP其实是差不多的，test_dev会难一点点(这个是否如此，有待商榷)
2. yolov3里面贴的指标例如YOLOv3 608, map=33.1,其实是test_dev的结果
原文里面没有写，但是可以对照retinanet论文找到



test_dev2017=40670张
test_dev2014=40775张


coco/trainvalno5k.txt：  表示coco2014训练集,实际上应该就是train2017数据集
5k.txt or coco_val_5k.list： 表示coco2014验证集，其实就是val2017




